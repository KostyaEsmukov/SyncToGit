import datetime
import os
from contextlib import ExitStack
from pathlib import Path

import pytest
import pytz

from synctogit.filename_sanitizer import normalize_filename
from synctogit.onenote.models import OneNotePage, OneNotePageInfo, OneNotePageMetadata
from synctogit.onenote.stored_note import OneNoteStoredNote
from synctogit.service.notes.stored_note import CorruptedNoteError


@pytest.fixture
def note_html():
    return (
        '<!doctype html>\n'
        '<!-- PLEASE DO NOT EDIT THIS FILE -->\n'
        "<!-- All changes you've done here will be stashed on next sync -->\n"
        '<!--+++++++++++++-->\n'
        '<!-- id: 0-999aa99a9999999aaaaa99aaa999aaaa!1-AAAAAAAAAAAAAAA!999 -->\n'
        '<!-- title: Пример страницы -->\n'
        '<!-- created: 2018-10-21 23:44:52.494000+03:00 -->\n'
        '<!-- last_modified: 2018-10-21 23:48:50+03:00 -->\n'
        '<!----------------->\n'
        '<html lang="en-US">\n'
        '<head>\n'
    )


@pytest.fixture
def note_header_vars():
    return {
        "id": "0-999aa99a9999999aaaaa99aaa999aaaa!1-AAAAAAAAAAAAAAA!999",
        "title": "Пример страницы",
        "created": "2018-10-21 23:44:52.494000+03:00",
        "last_modified": "2018-10-21 23:48:50+03:00",
    }


def test_note_to_html_valid():
    timezone_input = pytz.timezone('Europe/Moscow')
    timezone_output = pytz.timezone('Asia/Novosibirsk')
    page = OneNotePage(
        info=OneNotePageInfo(
            id="0-999aa99a9999999aaaaa99aaa999aaaa!1-AAAAAAAAAAAAAAA!999",
            title="страница",
            created=timezone_input.localize(
                datetime.datetime(2018, 9, 27, 1, 14, 3)
            ),
            last_modified=timezone_input.localize(
                datetime.datetime(2018, 9, 27, 1, 14, 3)
            ),
        ),
        html="<html><head></head><body>три четыре</body></html>".encode(),
        resources={},
    )
    expected_html = (
        "<!doctype html>\n"
        "<!-- PLEASE DO NOT EDIT THIS FILE -->\n"
        "<!-- All changes you've done here will be stashed on next sync -->\n"
        "<!--+++++++++++++-->\n"
        "<!-- id: 0-999aa99a9999999aaaaa99aaa999aaaa!1-AAAAAAAAAAAAAAA!999 -->\n"
        "<!-- title: страница -->\n"
        "<!-- created: 2018-09-27 05:14:03+07:00 -->\n"
        "<!-- last_modified: 2018-09-27 05:14:03+07:00 -->\n"
        "<!----------------->\n"
        "<html><head></head><body>три четыре</body></html>"
    )

    html = OneNoteStoredNote.note_to_html(page, timezone_output)
    assert html.decode() == expected_html


def test_get_stored_note_metadata_valid(temp_dir, note_html, note_header_vars):
    timezone = pytz.timezone('Europe/Moscow')
    notes_dir = Path(temp_dir)

    note = notes_dir / normalize_filename("Eleven ✨") / "Haircut" / "s1.html"
    os.makedirs(str(note.parents[0]))
    note.write_text(note_html)

    page_id, metadata = OneNoteStoredNote.get_stored_note_metadata(notes_dir, note)
    assert page_id == note_header_vars['id']
    assert metadata == OneNotePageMetadata(
        dir=("Eleven _2728", "Haircut"),
        name=("Eleven ✨", "Haircut", note_header_vars['title']),
        last_modified=timezone.localize(
            datetime.datetime(2018, 10, 21, 23, 48, 50)
        ),
        file='s1.html',
    )
    assert metadata.last_modified.tzinfo


@pytest.mark.parametrize(
    'is_valid, parts',
    [
        (False, []),
        (False, ['a']),
        (True, ['a', 'b']),
        (False, ['a', 'b', 'c']),
    ]
)
def test_get_stored_note_metadata_dir_parts(
    temp_dir, note_html, note_header_vars, is_valid, parts
):
    notes_dir = Path(temp_dir) / 'a'
    note = notes_dir.joinpath(*parts) / "s1.html"
    os.makedirs(str(note.parents[0]))
    note.write_text(note_html)

    with ExitStack() as stack:
        if not is_valid:
            stack.enter_context(pytest.raises(CorruptedNoteError))
        OneNoteStoredNote.get_stored_note_metadata(notes_dir, note)


@pytest.mark.parametrize(
    'note_html',
    [
        (
            # Missing title
            "<!doctype html>\n"
            "<!-- PLEASE DO NOT EDIT THIS FILE -->\n"
            "<!-- All changes you've done here will be stashed on next sync -->\n"
            "<!--+++++++++++++-->\n"
            "<!-- id: 0-999aa99a9999999aaaaa99aaa999aaaa!1-AAAAAAAAAAAAAAA!999 -->\n"
            "<!-- created: 2018-09-27 05:14:03+07:00 -->\n"
            "<!-- last_modified: 2018-09-27 05:14:03+07:00 -->\n"
            "<!----------------->\n"
            "<html>\n"
        ),
        (
            # Missing id
            "<!doctype html>\n"
            "<!-- PLEASE DO NOT EDIT THIS FILE -->\n"
            "<!-- All changes you've done here will be stashed on next sync -->\n"
            "<!--+++++++++++++-->\n"
            "<!-- title: страница -->\n"
            "<!-- created: 2018-09-27 05:14:03+07:00 -->\n"
            "<!-- last_modified: 2018-09-27 05:14:03+07:00 -->\n"
            "<!----------------->\n"
            "<html>\n"
        ),
        (
            # Invalid datetime in last_modified
            "<!doctype html>\n"
            "<!-- PLEASE DO NOT EDIT THIS FILE -->\n"
            "<!-- All changes you've done here will be stashed on next sync -->\n"
            "<!--+++++++++++++-->\n"
            "<!-- id: 0-999aa99a9999999aaaaa99aaa999aaaa!1-AAAAAAAAAAAAAAA!999 -->\n"
            "<!-- title: страница -->\n"
            "<!-- created: 2018-09-27 05:14:03+07:00 -->\n"
            "<!-- last_modified: 2018-30-27 05:14:03+07:00 -->\n"
            "<!----------------->\n"
            "<html>\n"
            "<head>\n"
        ),
        (
            # Naive datetime in last_modified
            "<!doctype html>\n"
            "<!-- PLEASE DO NOT EDIT THIS FILE -->\n"
            "<!-- All changes you've done here will be stashed on next sync -->\n"
            "<!--+++++++++++++-->\n"
            "<!-- id: 0-999aa99a9999999aaaaa99aaa999aaaa!1-AAAAAAAAAAAAAAA!999 -->\n"
            "<!-- title: страница -->\n"
            "<!-- created: 2018-09-27 05:14:03+07:00 -->\n"
            "<!-- last_modified: 2018-09-27 05:14:03 -->\n"
            "<!----------------->\n"
            "<html>\n"
            "<head>\n"
        ),
    ]
)
def test_get_stored_note_metadata_invalid_vars(
    temp_dir, note_html, note_header_vars
):
    notes_dir = Path(temp_dir)
    note = notes_dir / "Eleven" / "Haircut" / "s1.html"
    os.makedirs(str(note.parents[0]))
    note.write_text(note_html)

    with pytest.raises(CorruptedNoteError):
        OneNoteStoredNote.get_stored_note_metadata(notes_dir, note)
